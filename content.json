[{"title":"js�﷨","date":"2017-02-14T13:18:47.000Z","path":"2017/02/14/js-grammar/","text":"�����﷨����js����ִ�е�λΪ�У�һ��һ�е�ִ�У�һ����˵��һ�о���һ�����䡣����(statement)��Ϊ������ĳ�����������еĲ��������磺 var a = 1 + 1; 1 + 1 Ϊ����ʽ(expression),Ϊ�˵õ�����ֵ�ļ���ʽ������������ʽ����Ϊ:����һ�㲻��Ҫ����ֵ������ʽһ���᷵��һ��ֵ��js������Ԥ��Ϊֵ�ĵط�������ʹ�ñ���ʽ��һ���������԰�����������ʽ�������ѷֺŽ�β��һ���ֺžͱ�ʾ�����������ֺ�ǰ������û�����ݣ�js������Ϊ�����䡣����ʽ����Ҫ�ֺŽ�β���ӷֺ�����Ϊ���䣬���κ����塣 �������������Ƕ�ֵ������ var a = 1������a���ٽ�������֮�佨�����ù�ϵ�����ǽ�1��ֵ��a��var��ʾ�����������֪ͨ�������棬����һ������a��ʵ������: var a; a = 1; ֻ��������������ֵ���ñ�����ֵ��undefined.��дvarҲ����Ч�ģ������ᴴ��ȫ�ֱ����� var a = 1��a = 1,����������Ч����ȫ��ͬ���ϸ���˵���ʲ���ȫ��ͬ��ֻ��var a= 1��������������a = 1�൱��window[“a”] = 1.���������Կ�ɾ�������Կ���delete a. ����û������ֱ��ʹ�ã��ͻر�����δ���塣����������û�����ƣ����Ը����������͵�ֵ��������һ�����ڵı������ڶ���������Ч����ֵ���Ḳ��ǰ����ֵ�� ��������js���湤����ʽ���Ƚ������룬��ȡ���б������ı�������һ��һ�е����С������������б������������䶼�ᱻ������������ͷ������Ϊ��������(hoisting)������: console.log(a); var a = 1; ʵ����: var a; console.log(a); a = 1; ��ʾΪundefined,������var�����ı������ᷢ������������ ע��js���������������ڻ���������;��(���ȼ�)��1.���Զ�������������this,arguments�������������������¶���this2.��ʽ����3.��������4.var�����ı��� ��ʶ������ʶ������������һ�����ƣ����Ϊ���������Լ�����������������:��һ���ַ�����������Unicode��ĸ��$��_,�ڶ������Ժ��Ļ�������0-9���Ŀ���������ʶ���� js��һЩ�����ֲ���������ʶ��:arguments��break��case��catch��class��const��continue��debugger��default��delete��do��else��enum��eval��export��extends��false��finally��for��function��if��implements��import��in��instanceof��interface��let��new��null��package��private��protected��public��return��static��super��switch��this��throw��true��try��typeof��var��void��while��with��yieldInfinity NaN undefined��Ȼ���Ǳ����֣�����Ϊ�����ر����壬Ҳ��������ʶ","tags":[{"name":"js","slug":"js","permalink":"https://sixcx.github.io/tags/js/"}]},{"title":"hexo搭建github博客的学习","date":"2017-02-14T12:09:22.000Z","path":"2017/02/14/hexo-learn/","text":"导语 使用github pages服务器搭建博客的好处:1.静态文件，访问速度快2.免费，无需花钱就能搭建一个自己的博客3.数据安全，基于github4.只需要写自己的文章上传即可5.可以随意绑定自己的域名 准备工作 自己的github账号 安装nodejs、npm，及其相关知识 安装git 创建仓库新建用户名为 username.github.io的仓库,username就是你的用户名，也必须是你的用户名，访问地址就是 http://username.github.io每个账号只能创建一个这样的可以直接访问的仓库，以后你的代码都放在这个仓库 绑定域名显然，不绑定也是可以的，如果你想有个性一点，就去注册一个域名。配置域名常见两种方式，CNAME和A记录，CNAME填域名，A记录填IP，不带www方式的只能采用A记录，先ping一下username.github.io的IP，到你的域名DNS设置页将A记录指向这个IP，将CNAME指向username.github.io，保证无论是否有www都能访问。到你项目的根目录建一个CNAME文件，填写你的域名，就可以访问这个域名，原来的默认并没有失效，只是自动调转到新域名 配置SSH key解决服务器与本机的连接问题，打开git bash执行: cd ~/.ssh #检查本机已存在的ssh密钥 提示: No such file of directory说明是第一次使用执行: ssh-keygen -t rsa -C &quot;你的邮件地址&quot; 3次回车，会生成在用户目录下，打开.ssh\\id_rsa.pub，复制内容，在你的github主页个人设置-&gt;SSH ang GPG keys-&gt;New SSH key，将内容复制进去，title随意，保存执行以下命令来测试是否成功: ssh -T git@github.com 若提示Are you sure yo want to continue connecting(yes/no)?，输入yes，成功 使用hexo简介:hexo是一个基于Github Pages的博客发布工具 官网：http://hexo.io github: https://github.com/hexojs/hexo安装： npm install -g hexo 初始化：新建一个文件夹，作为存放代码的地方 cd 你的文件夹 hexo init hexo会自动加载文件到此目录使用以下命令生成启动: hexo g #生成 hexo s #启动服务 执行后会在目录下生成public文件夹生成相关html文件，用于提交到github打开localhost:4000就会看到内容 修改主题：网上有很多，这里使用hexo-theme-yilia下载: git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 将主题放入theme文件夹下的yilia，修改根目录_config.yml的theme: landscape改为theme: yilia，执行hexo g 重新生成，遇到问题可以执行hexo clean来清理，再重新生成发布。 上传到github将_config_yml中的deploy修改: deploy: type: git repository: git@github.com:username/username.github.io.git branch: master 安装下列插件: npm install hexo-deploy-git --save 使用git bash 输入 hexo d 将代码提交到github 可以将CNAME、README.md等文件放入source，在_config.yml中配置skip_render: [README.md] 缩写: hexo n == hexo new hexo g == hexo generate hexo s == hexo server hexo d == hexo deploy 组合命令: hexo s -g #生成并本地预览 hexo d -g #生成并上传 写博客到hexo根目录执行: hexo new &apos;name&apos; hexo会帮我们在_posts下面生成相关md文件打开此文件就可以开始写博客","tags":[{"name":"github","slug":"github","permalink":"https://sixcx.github.io/tags/github/"},{"name":"hexo","slug":"hexo","permalink":"https://sixcx.github.io/tags/hexo/"}]}]